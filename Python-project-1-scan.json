{
  "errors": [],
  "generated_at": "2024-11-26T04:53:32Z",
  "metrics": {
    ".\\Python-project-1\\app.py": {
      "CONFIDENCE.HIGH": 6,
      "CONFIDENCE.LOW": 2,
      "CONFIDENCE.MEDIUM": 3,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 5,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 4,
      "SEVERITY.UNDEFINED": 0,
      "loc": 99,
      "nosec": 0,
      "skipped_tests": 0
    },
    "_totals": {
      "CONFIDENCE.HIGH": 6,
      "CONFIDENCE.LOW": 2,
      "CONFIDENCE.MEDIUM": 3,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 5,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 4,
      "SEVERITY.UNDEFINED": 0,
      "loc": 99,
      "nosec": 0,
      "skipped_tests": 0
    }
  },
  "results": [
    {
      "code": "4 import hashlib\n5 import pickle\n6 import requests\n",
      "col_offset": 0,
      "end_col_offset": 13,
      "filename": ".\\Python-project-1\\app.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 502,
        "link": "https://cwe.mitre.org/data/definitions/502.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with pickle module.",
      "line_number": 5,
      "line_range": [
        5
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_imports.html#b403-import-pickle",
      "test_id": "B403",
      "test_name": "blacklist"
    },
    {
      "code": "9 app = Flask(__name__)\n10 app.config['SECRET_KEY'] = 'supersecretkey'  # Hardcoded secret key (Vulnerability)\n11 app.config['UPLOAD_FOLDER'] = 'static/uploads'\n",
      "col_offset": 11,
      "end_col_offset": 23,
      "filename": ".\\Python-project-1\\app.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'supersecretkey'",
      "line_number": 10,
      "line_range": [
        10
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "29 users = [\n30     ('alice', hashlib.md5('password123'.encode()).hexdigest(), 'user'),\n31     ('bob', hashlib.md5('password123'.encode()).hexdigest(), 'user'),\n",
      "col_offset": 14,
      "end_col_offset": 49,
      "filename": ".\\Python-project-1\\app.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 327,
        "link": "https://cwe.mitre.org/data/definitions/327.html"
      },
      "issue_severity": "HIGH",
      "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
      "line_number": 30,
      "line_range": [
        30
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html",
      "test_id": "B324",
      "test_name": "hashlib"
    },
    {
      "code": "30     ('alice', hashlib.md5('password123'.encode()).hexdigest(), 'user'),\n31     ('bob', hashlib.md5('password123'.encode()).hexdigest(), 'user'),\n32     ('admin', hashlib.md5('adminpass'.encode()).hexdigest(), 'admin')\n",
      "col_offset": 12,
      "end_col_offset": 47,
      "filename": ".\\Python-project-1\\app.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 327,
        "link": "https://cwe.mitre.org/data/definitions/327.html"
      },
      "issue_severity": "HIGH",
      "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
      "line_number": 31,
      "line_range": [
        31
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html",
      "test_id": "B324",
      "test_name": "hashlib"
    },
    {
      "code": "31     ('bob', hashlib.md5('password123'.encode()).hexdigest(), 'user'),\n32     ('admin', hashlib.md5('adminpass'.encode()).hexdigest(), 'admin')\n33 ]\n",
      "col_offset": 14,
      "end_col_offset": 47,
      "filename": ".\\Python-project-1\\app.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 327,
        "link": "https://cwe.mitre.org/data/definitions/327.html"
      },
      "issue_severity": "HIGH",
      "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
      "line_number": 32,
      "line_range": [
        32
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html",
      "test_id": "B324",
      "test_name": "hashlib"
    },
    {
      "code": "54         # Weak password hashing (Cryptographic Failures)\n55         password_hash = hashlib.md5(password.encode()).hexdigest()\n56 \n",
      "col_offset": 24,
      "end_col_offset": 54,
      "filename": ".\\Python-project-1\\app.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 327,
        "link": "https://cwe.mitre.org/data/definitions/327.html"
      },
      "issue_severity": "HIGH",
      "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
      "line_number": 55,
      "line_range": [
        55
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b324_hashlib.html",
      "test_id": "B324",
      "test_name": "hashlib"
    },
    {
      "code": "57         # SQL Injection vulnerability (Injection)\n58         query = f\"SELECT * FROM users WHERE username = '{username}' AND password_hash = '{password_hash}'\"\n59         cursor.execute(query)\n",
      "col_offset": 16,
      "end_col_offset": 106,
      "filename": ".\\Python-project-1\\app.py",
      "issue_confidence": "LOW",
      "issue_cwe": {
        "id": 89,
        "link": "https://cwe.mitre.org/data/definitions/89.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 58,
      "line_range": [
        58
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "99     data = request.data\n100     obj = pickle.loads(data)\n101     return 'Data deserialized'\n",
      "col_offset": 10,
      "end_col_offset": 28,
      "filename": ".\\Python-project-1\\app.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 502,
        "link": "https://cwe.mitre.org/data/definitions/502.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
      "line_number": 100,
      "line_range": [
        100
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/blacklists/blacklist_calls.html#b301-pickle",
      "test_id": "B301",
      "test_name": "blacklist"
    },
    {
      "code": "106     # SSRF vulnerability\n107     response = requests.get(url)\n108     return response.content\n",
      "col_offset": 15,
      "end_col_offset": 32,
      "filename": ".\\Python-project-1\\app.py",
      "issue_confidence": "LOW",
      "issue_cwe": {
        "id": 400,
        "link": "https://cwe.mitre.org/data/definitions/400.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Call to requests without timeout",
      "line_number": 107,
      "line_range": [
        107
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b113_request_without_timeout.html",
      "test_id": "B113",
      "test_name": "request_without_timeout"
    },
    {
      "code": "134     # Debug mode enabled (Security Misconfiguration)\n135     app.run(debug=True, host='0.0.0.0')\n",
      "col_offset": 4,
      "end_col_offset": 39,
      "filename": ".\\Python-project-1\\app.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 94,
        "link": "https://cwe.mitre.org/data/definitions/94.html"
      },
      "issue_severity": "HIGH",
      "issue_text": "A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.",
      "line_number": 135,
      "line_range": [
        135
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b201_flask_debug_true.html",
      "test_id": "B201",
      "test_name": "flask_debug_true"
    },
    {
      "code": "134     # Debug mode enabled (Security Misconfiguration)\n135     app.run(debug=True, host='0.0.0.0')\n",
      "col_offset": 29,
      "end_col_offset": 38,
      "filename": ".\\Python-project-1\\app.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 605,
        "link": "https://cwe.mitre.org/data/definitions/605.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Possible binding to all interfaces.",
      "line_number": 135,
      "line_range": [
        135
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.7.10/plugins/b104_hardcoded_bind_all_interfaces.html",
      "test_id": "B104",
      "test_name": "hardcoded_bind_all_interfaces"
    }
  ]
}